{"version":3,"sources":["factoryFunctions/GameArena.js","factoryFunctions/Player.js","script.js","../../../../../home/vaibhavsethia07/.nvm/versions/node/v16.13.2/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["GameArena","board","_board","_turn","setGameBoard","getGameBoard","printFormattedBoard","formattedBoard","forEach","cell","index","slice","console","log","isEmpty","every","isFull","insert","symbol","position","includes","clearBoard","isTerminal","getAvailableMoves","moves","push","toggleTurn","getTurn","Player","depth","maxDepth","nodesMap","Map","getMaxDepth","getNodesMap","getBestMove","gameBoard","isMaximizing","callback","clear","winner","best","newGameBoard","nodeValue","Math","max","has","get","set","bestIndex","arr","split","rand","floor","random","length","min","gameArena","player","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","generated","js","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["export const GameArena = (board) => {\r\n    let _board = board;\r\n    let _turn = \"Player\";\r\n\r\n    const setGameBoard = (board) => _board = board;\r\n\r\n    const getGameBoard = () => _board;\r\n\r\n    //  Print the game board\r\n    const printFormattedBoard = () => {\r\n        let formattedBoard = \"\";\r\n        _board.forEach((cell, index) => {\r\n            formattedBoard += cell ? ` ${cell} |` : `   |`;\r\n            if ((index + 1) % 3 === 0) {\r\n                formattedBoard = formattedBoard.slice(0, -1);\r\n                if (index < 8)\r\n                    formattedBoard += \"\\n\\u2015\\u2015\\u2015 \\u2015\\u2015\\u2015 \\u2015\\u2015\\u2015\\n\";\r\n            }\r\n        })\r\n        console.log('%c' + formattedBoard, 'color: #c11dd4;font-size:16px');\r\n    }\r\n\r\n    //  Check if the board is empty\r\n    const isEmpty = () => {\r\n        return _board.every(cell => !cell);\r\n    }\r\n\r\n    //  Check if the board is filled\r\n    const isFull = () => {\r\n        return _board.every(cell => cell);\r\n    }\r\n\r\n    /*  Inserts a symbol at the specified position\r\n        @param {String} symbol specifies a symbol either 'X' or 'O' choosen by the user\r\n        @param {Number} position specifies a position to insert the symbol\r\n        @return {Boolean} determines the outcome of insert operation \r\n    */\r\n    const insert = (symbol, position) => {\r\n        if (![0, 1, 2, , 3, 4, 5, 6, 7, 8].includes(position)) {\r\n            return false;\r\n        }\r\n\r\n        if (!['x', 'o'].includes(symbol)) {\r\n            return false;\r\n        }\r\n\r\n        if (_board[position]) {\r\n            return false;\r\n        }\r\n\r\n        _board[position] = symbol;\r\n        return true;\r\n    }\r\n\r\n    // Clear the board\r\n    const clearBoard = () => {\r\n        _board.forEach((cell, index) => _board[index] = \"\")\r\n    }\r\n\r\n    /*  Checks if the board is at the terminal state i.e either someone is a winner or it's a draw\r\n        @return {Object} returns an object containing the winner, direction of winning and row/column/diagonal number\r\n    */\r\n    const isTerminal = () => {\r\n        if (isEmpty()) {\r\n            return false;\r\n        }\r\n\r\n        // Checking rows\r\n        if (_board[0] && _board[0] === _board[1] && _board[0] === _board[2]) {\r\n            return { 'winner': _board[0], 'direction': 'H', 'row': 0 };\r\n        }\r\n\r\n        if (_board[3] && _board[3] === _board[4] && _board[3] === _board[5]) {\r\n            return { 'winner': _board[3], 'direction': 'H', 'row': 1 };\r\n        }\r\n\r\n        if (_board[6] && _board[6] === _board[7] && _board[6] === _board[8]) {\r\n            return { 'winner': _board[6], 'direction': 'H', 'row': 2 };\r\n        }\r\n\r\n        // Checking columns\r\n        if (_board[0] && _board[0] === _board[3] && _board[0] === _board[6]) {\r\n            return { 'winner': _board[0], 'direction': 'V', 'column': 0 };\r\n        }\r\n\r\n        if (_board[1] && _board[1] === _board[4] && _board[1] === _board[7]) {\r\n            return { 'winner': _board[1], 'direction': 'V', 'column': 1 };\r\n        }\r\n\r\n        if (_board[2] && _board[2] === _board[5] && _board[2] === _board[8]) {\r\n            return { 'winner': _board[2], 'direction': 'V', 'column': 2 };\r\n        }\r\n\r\n        // Checking diagonals\r\n        if (_board[0] && _board[0] === _board[4] && _board[0] === _board[8]) {\r\n            return { 'winner': _board[0], 'direction': 'D', 'diagonal': 1 };\r\n        }\r\n\r\n        if (_board[2] && _board[2] === _board[4] && _board[2] === _board[6]) {\r\n            return { 'winner': _board[1], 'direction': 'D', 'diagonal': 2 };\r\n        }\r\n\r\n        if (isFull()) {\r\n            return { 'winner': 'draw' };\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /* Returns an array containing available moves for the current state */\r\n    const getAvailableMoves = () => {\r\n        let moves = [];\r\n\r\n        _board.forEach((cell, index) => {\r\n            if (!cell) {\r\n                moves.push(index);\r\n            }\r\n        })\r\n\r\n        return moves;\r\n    }\r\n\r\n    /* Toggles the turn between the player and AI */\r\n    const toggleTurn = () => {\r\n        if (_turn === \"Player\") {\r\n            _turn = \"AI\";\r\n        } else {\r\n            _turn = \"Player\";\r\n        }\r\n    }\r\n\r\n    const getTurn = () => _turn;\r\n\r\n    return {\r\n        setGameBoard,\r\n        getGameBoard,\r\n        printFormattedBoard,\r\n        isEmpty,\r\n        isFull,\r\n        insert,\r\n        clearBoard,\r\n        isTerminal,\r\n        getAvailableMoves,\r\n        toggleTurn,\r\n        getTurn\r\n    }\r\n\r\n};\r\n\r\n\r\n","import { GameArena } from \"./GameArena\";\r\n\r\nexport const Player = (depth = -1) => {\r\n    const maxDepth = depth;\r\n    let nodesMap = new Map();\r\n\r\n    const getMaxDepth = () => maxDepth;\r\n\r\n    const getNodesMap = () => nodesMap;\r\n\r\n    const getBestMove = (gameBoard, isMaximizing = true, depth = 0, callback = () => { }) => {\r\n        if (depth === 0) {\r\n            nodesMap.clear();\r\n        }\r\n\r\n        if (gameBoard.isTerminal() || depth === maxDepth) {\r\n            if (gameBoard.isTerminal().winner === \"x\") {\r\n                return 100 - depth;\r\n            } else if (gameBoard.isTerminal().winner === \"o\") {\r\n                return -100 + depth;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        if (isMaximizing) {\r\n            let best = -100;\r\n            gameBoard.getAvailableMoves().forEach(index => {\r\n                const newGameBoard = GameArena(gameBoard.getGameBoard());\r\n\r\n                newGameBoard.insert('x', index);\r\n\r\n                const nodeValue = getBestMove(newGameBoard, !isMaximizing, depth + 1, callback);\r\n                best = Math.max(best, nodeValue);\r\n\r\n                if (depth === 0) {\r\n                    const moves = nodesMap.has(nodeValue) ? `${nodesMap.get(nodeValue)}, ${index} ` : index;\r\n                    nodesMap.set(nodeValue, moves);\r\n                }\r\n            })\r\n\r\n\r\n            if (depth === 0) {\r\n                let bestIndex = \"\";\r\n                if (typeof nodesMap.get(best) === 'string') {\r\n                    const arr = nodesMap.get(best).split(',');\r\n                    const rand = Math.floor(Math.random() * arr.length);\r\n                    bestIndex = arr[rand];\r\n                } else {\r\n                    bestIndex = nodesMap.get(best);\r\n                }\r\n                callback(bestIndex);\r\n                return bestIndex;\r\n            }\r\n\r\n            return best;\r\n        } else {\r\n            let best = 100;\r\n            gameBoard.getAvailableMoves().forEach(index => {\r\n                const newGameBoard = GameArena(gameBoard.getGameBoard());\r\n\r\n                newGameBoard.insert('o', index);\r\n\r\n                const nodeValue = getBestMove(newGameBoard, !isMaximizing, depth + 1, callback);\r\n                best = Math.min(best, nodeValue);\r\n\r\n                if (depth === 0) {\r\n                    const moves = nodesMap.has(nodeValue) ? `${nodesMap.get(nodeValue)},${index}` : index;\r\n                    nodesMap.set(nodeValue, moves);\r\n                }\r\n            })\r\n\r\n            if (depth === 0) {\r\n                let bestIndex = \"\";\r\n                if (typeof nodesMap.get(best) === \"string\") {\r\n                    const arr = nodesMap.get(best).split(',');\r\n                    const rand = Math.floor(Math.random() * arr.length);\r\n                    bestIndex = arr[rand];\r\n                } else {\r\n                    bestIndex = nodesMap.get(best);\r\n                }\r\n                callback(bestIndex);\r\n                return bestIndex;\r\n            }\r\n\r\n            return best;\r\n        }\r\n    }\r\n\r\n    return { getMaxDepth, getNodesMap, getBestMove };\r\n}","import { GameArena } from './factoryFunctions/GameArena'\r\nimport { Player } from './factoryFunctions/Player'\r\n\r\nconst gameArena = GameArena([\"x\", \"o\", \"\", \"\", \"\", \"\", \"o\", \"\", \"x\"]);\r\ngameArena.printFormattedBoard();\r\nconst player = Player();\r\n\r\nconsole.log(player.getBestMove(gameArena, false));\r\nconsole.log(player.getNodesMap());","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}